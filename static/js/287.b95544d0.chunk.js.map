{"version":3,"file":"static/js/287.b95544d0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/TaskForm/TaskForm.module.css?c90e","components/TaskForm/TaskForm.jsx","webpack://react-homework-template/./src/components/Task/Task.module.css?22e8","components/Task/Task.jsx","webpack://react-homework-template/./src/components/TaskList/TaskList.module.css?079b","redux/tasks/selectors.js","components/TaskList/TaskList.jsx","webpack://react-homework-template/./src/components/StatusFilter/StatusFilter.module.css?8bce","components/StatusFilter/StatusFilter.jsx","webpack://react-homework-template/./src/components/TaskCounter/TaskCounter.module.css?6054","components/TaskCounter/TaskCounter.jsx","webpack://react-homework-template/./src/components/TaskBar/TaskBar.module.css?8d31","components/TaskBar/TaskBar.jsx","pages/Tasks.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\",\"isSelected\":\"Button_isSelected__-6JYv\"};","import clsx from 'clsx';\nimport css from './Button.module.css';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected,\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskForm_form__LZ0D1\",\"field\":\"TaskForm_field__3Hftx\"};","import { Button } from 'components/Button/Button';\nimport css from './TaskForm.module.css';\n\nimport { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasks/operations';\n\nexport const TaskForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    dispatch(addTask(form.elements.text.value));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"text\"\n        name=\"text\"\n        placeholder=\"Enter task text...\"\n      />\n      <Button type=\"submit\">Add task</Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"btn\":\"Task_btn__5Zeie\",\"checkbox\":\"Task_checkbox__XsrPA\"};","import { MdClose } from 'react-icons/md';\nimport css from './Task.module.css';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteTask, toggleCompleted } from 'redux/tasks/operations';\n\nexport const Task = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => dispatch(deleteTask(task.id));\n  const handleToggle = () => dispatch(toggleCompleted(task));\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={css.checkbox}\n        checked={task.completed}\n        onChange={handleToggle}\n      />\n      <p className={css.text}>{task.text}</p>\n      <button className={css.btn} onClick={handleClick}>\n        <MdClose size={24} />\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__Q1M-x\",\"listItem\":\"TaskList_listItem__XsStd\"};","export const getTasks = state => state.tasks.items;\nexport const getError = state => state.tasks.error;\nexport const getIsLoading = state => state.tasks.isLoading;\n\nexport const getStatusFilter = state => state.filters.status;\n","import { Task } from 'components/Task/Task';\nimport css from './TaskList.module.css';\nimport { useSelector } from 'react-redux';\n\nimport { statusFilters } from 'redux/tasks/constans';\n\nimport { getTasks } from 'redux/tasks/selectors';\nimport { getStatusFilter } from 'redux/tasks/selectors';\n\nconst getVisibleTasks = (tasks, statusFilter) => {\n  switch (statusFilter) {\n    case statusFilters.active:\n      return tasks.filter(task => !task.completed);\n\n    case statusFilters.completed:\n      return tasks.filter(task => task.completed);\n\n    default:\n      return tasks;\n  }\n};\n\nexport const TaskList = () => {\n  // Отримуємо масив завдань із стану Redux\n  const tasks = useSelector(getTasks);\n  // Отримуємо значення фільтра із стану Redux\n  const statusFilter = useSelector(getStatusFilter);\n  // Обчислюємо масив завдань, які необхідно відображати в інтерфейсі\n  const visibleTasks = getVisibleTasks(tasks, statusFilter);\n\n  return (\n    <ul className={css.list}>\n      {visibleTasks.map(task => (\n        <li className={css.listItem} key={task.id}>\n          <Task task={task} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"StatusFilter_wrapper__gblkH\"};","import { Button } from 'components/Button/Button';\nimport css from './StatusFilter.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { statusFilters } from 'redux/tasks/constans';\nimport { getStatusFilter } from 'redux/tasks/selectors';\n\nimport { setStatusFilter } from 'redux/tasks/filtersSlice';\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getStatusFilter);\n\n  const handleChangeFilter = filter => dispatch(setStatusFilter(filter));\n\n  return (\n    <div className={css.wrapper}>\n      <Button\n        selected={filter === statusFilters.all}\n        onClick={() => handleChangeFilter(statusFilters.all)}\n      >\n        All\n      </Button>\n      <Button\n        selected={filter === statusFilters.active}\n        onClick={() => handleChangeFilter(statusFilters.active)}\n      >\n        Active\n      </Button>\n      <Button\n        selected={filter === statusFilters.completed}\n        onClick={() => handleChangeFilter(statusFilters.completed)}\n      >\n        Completed\n      </Button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"TaskCounter_text__K9ECF\"};","import css from './TaskCounter.module.css';\nimport { useSelector } from 'react-redux';\n\nimport { getTasks } from 'redux/tasks/selectors';\n\nexport const TaskCounter = () => {\n  const tasks = useSelector(getTasks);\n\n  const count = tasks.reduce(\n    (acc, task) => {\n      if (task.completed) {\n        acc.completed += 1;\n      } else {\n        acc.active += 1;\n      }\n\n      return acc;\n    },\n    { active: 0, completed: 0 }\n  );\n  return (\n    <div>\n      <p className={css.text}>Active: {count.active}</p>\n      <p className={css.text}>Completed: {count.completed}</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TaskBar_wrapper__gJ-jn\",\"section\":\"TaskBar_section__Nclw-\",\"title\":\"TaskBar_title__ymTIF\"};","import { StatusFilter } from 'components/StatusFilter/StatusFilter';\nimport { TaskCounter } from 'components/TaskCounter/TaskCounter';\nimport css from './TaskBar.module.css';\n\nexport const TaskBar = () => {\n  return (\n    <header className={css.wrapper}>\n      <section className={css.section}>\n        <h2 className={css.title}>Tasks</h2>\n        <TaskCounter />\n      </section>\n      <section className={css.section}>\n        <h2 className={css.title}>Filter by status</h2>\n        <StatusFilter />\n      </section>\n    </header>\n  );\n};\n","import { TaskForm } from 'components/TaskForm/TaskForm';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { TaskBar } from 'components/TaskBar/TaskBar';\n\nimport { Helmet } from 'react-helmet';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { getError, getIsLoading, getTasks } from 'redux/tasks/selectors';\n\nexport default function Tasks() {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const tasks = useSelector(getTasks);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <TaskBar />\n      <TaskForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {tasks.length > 0 && <TaskList />}\n    </>\n  );\n}\n"],"names":["Button","selected","type","children","otherProps","className","clsx","css","TaskForm","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","addTask","elements","text","value","reset","name","placeholder","Task","task","checked","completed","onChange","toggleCompleted","onClick","deleteTask","id","size","getTasks","state","tasks","items","getError","error","getIsLoading","isLoading","getStatusFilter","filters","status","TaskList","visibleTasks","statusFilter","statusFilters","filter","getVisibleTasks","useSelector","map","StatusFilter","handleChangeFilter","setStatusFilter","TaskCounter","count","reduce","acc","active","TaskBar","Tasks","useEffect","fetchTasks","Helmet","length"],"sourceRoot":""}